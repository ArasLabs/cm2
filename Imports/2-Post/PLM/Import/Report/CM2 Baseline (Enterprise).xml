<AML>
 <Item type="Report" id="2FF4B7DF9F764CB7A36423FC4C48A5C6" action="add">
  <location>client</location>
  <report_query><![CDATA[<Item type="{@type}" id="{@id}" action="get" select=""/>]]></report_query>
  <target>window</target>
  <type>item</type>
  <xsl_stylesheet><![CDATA[<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
    xmlns:msxsl="urn:schemas-microsoft-com:xslt" 
    xmlns:user="urn:user-scripts" 
    xmlns:aras="http://www.aras.com" version="1.0">

    <xsl:output method="html" omit-xml-declaration="yes" standalone="yes" indent="yes" cdata-section-elements="script msxsl:script"/>

    <xsl:template match="/">
        <xsl:variable name="item_number" select="//Item[@type='Report Options']/item_number" />
        <xsl:variable name="selected_date" select="//Item[@type='Report Options']/selected_date" />

        <html>

            <head></head>
            <style type="text/css" userData="Global">
                @import url(http://fonts.googleapis.com/css?family=Roboto:400,500,700,300,100);
                body {
                    font-family: "Roboto", helvetica, arial, sans-serif;
                    font-size: 12px;
                    font-weight: 400;
                    text-rendering: optimizeLegibility;
                    background-color: #FFFFFF;
                }

                table {
                    table-layout: fixed;
                }

                /*** Table Styles **/

                .table-fill {
                    background: white;
                    border-radius: 3px;
                    border-collapse: collapse;
                    margin: auto;
                    padding: 5px;
                    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
                    animation: float 5s infinite;
                }

                thead tr:first-child th {
                    font-weight: 100;
                    font-size: 20px;
                    padding: 14px;
                }

                thead tr:last-child th {
                    font-weight: 400;
                    font-size: 16px;
                    padding: 8px;
                }

                th {
                    color: #D5DDE5;
                    background: #1b1e24;
                    border-right: 1px solid #FFF;
                    text-align: center;
                    vertical-align: middle;
                }

                th:first-child {
                    border-top-left-radius: 3px;
                }

                th:last-child {
                    border-top-right-radius: 3px;
                    border-right: none;
                }

                tr {
                    border-top: 1px solid #C1C3D1;
                    border-bottom: 1px solid #C1C3D1;
                    color: #666B85;
                    font-size: 12px;
                    font-weight: normal;
                    text-shadow: 0 1px 1px rgba(256, 256, 256, 0.1);
                }

                tr:first-child {
                    border-top: none;
                }

                tr:last-child {
                    border-bottom: none;
                }

                tr:last-child td:first-child {
                    border-bottom-left-radius: 3px;
                }

                tr:last-child td:last-child {
                    border-bottom-right-radius: 3px;
                }

                td {
                    background: #FFFFFF;
                    padding: 14px;
                    text-align: left;
                    vertical-align: middle;
                    font-weight: 300;
                    font-size: 12px;
                    border-right: 1px solid #C1C3D1;
                }

                td:last-child {
                    border-right: 0;
                }

                th.text-left {
                    text-align: left;
                }

                th.text-center {
                    text-align: center;
                }

                th.text-right {
                    text-align: right;
                }

                td.text-left {
                    text-align: left;
                }

                td.text-center {
                    text-align: center;
                }

                td.text-right {
                    text-align: right;
                }

                .lite {
                    opacity: 0.60;
                }

                .doc-in-desc {
                    color: #c41134;
                    font-weight: 400;
                }

                /* new styles */

                .x1 {
                    width: 15px;
                    text-align: center;
                }

                .x2 {
                    width: 40px;
                }

                .x3 {
                    width: 60px;
                    text-align: center;
                }

                .x4 {
                    /* width: 80px; */
                    width: 70px;
                    text-align: center;
                }

                .x5 {
                    width: 100px;
                }

                .x6 {
                    width: 120px;
                }

                .x7 {
                    width: 140px;
                }

                .x8 {
                    width: 160px;
                }

                #title-row th {
                    background-color: #5A5A5A;
                    color: #FFF;
                    font-weight: bold;
                }

                #date-and-num-row th {
                    background-color: #FFF;
                    color: #F26923;
                    font-size: 16px;
                    padding-top: 10px;
                    padding-bottom: 10px;
                    border: none;
                    text-align: left;
                }

                .date-and-num {
                    color: #3B3838;
                    font-size: 16px;
                    margin-right: 10px;
                }

                tr,
                tr th,
                tr td {
                    border-color: #FFF;
                    border-width: 2px;
                }

                #col-set-row th {
                    font-size: 16px;
                    color: #3B3838;
                    padding-top: 10px;
                    padding-bottom: 10px;
                }

                #col-name-row th {
                    background-color: #FFF;
                    color: #3B3838;
                    font-size: 12px;
                    padding-top: 10px;
                    padding-bottom: 10px;
                    font-weight: bold;
                }

                .light {
                    background-color: #F2F2F2 !important;
                    color: #3B3838;
                }

                .mid {
                    background-color: #E7E6E6 !important;
                    color: #3B3838;
                }

                .mid-title {
                    background-color: #D0CECE !important;
                }

                .type-name {
                    display: block;
                    font-weight: bold;
                }

                .planned-date {
                    background-color: #E0B85C !important;
                }

                .dev-or-waiver {
                    background-color: #94CB69 !important;
                }

                .hide-col {
                    width:0px !important;
                    display: none;
                }
            </style>

            <body topmargin="50" leftmargin="50">
                <table class="table-fill">
                    <thead>
                        <tr id="title-row">
                            <th colspan="16">CM2 Baseline for Enterprise Datasets</th>
                        </tr>
                        <tr id="date-and-num-row">
                            <th colspan="5"></th>
                            <th colspan="2">
                                <span class="date-and-num">Enterprise ID</span>
                                <xsl:value-of select="$item_number" />
                            </th>
                            <th colspan="4"></th>
                            <th colspan="3">
                                <span class="date-and-num">Date</span>
                                <xsl:call-template name="format_date">
                                    <xsl:with-param name="my_date" select="$selected_date" />
                                </xsl:call-template>
                            </th>
                            <th colspan="2"></th>
                        </tr>
                        <tr id="col-set-row">
                            <th colspan="7" class="light">Items</th>
                            <th colspan="6" class="mid">Enterprise Datasets</th>
                            <th colspan="3" class="light">Planned Changes</th>
                        </tr>
                        <tr id="col-name-row">
                            <th colspan="5">Hierarchy (Qty per)</th>
                            <th colspan="1">Num.</th>
                            <th colspan="1">Name</th>
                            <th colspan="1">Type</th>
                            <th colspan="1">Num.</th>
                            <th colspan="1">Rev</th>
                            <th colspan="1">Rel. Date</th>
                            <th colspan="1">Eff. Date</th>
                            <th colspan="1">CN</th>
                            <th colspan="1">A/D</th>
                            <th colspan="1">Effectivity</th>
                            <th colspan="1">CN</th>
                        </tr>
                    </thead>
                    <tbody>
                        <xsl:apply-templates select="/AML/Item[@type='Part']/Relationships/Item[@type='Part Document']" />
                    </tbody>
                </table>
            </body>

        </html>
    </xsl:template>



    <!-- use to build hierarchy cols in each row -->
    <xsl:template name="hierarchy">
        <xsl:param name="level"/>

        <td class="item-qty-1 x1 light">
            <xsl:if test="$level = '1'">
                x
            </xsl:if>
        </td>
        <td class="item-qty-2 x1 light">
            <xsl:if test="$level = '2'">
                x
            </xsl:if>
        </td>
        <td class="item-qty-3 x1 light">
            <xsl:if test="$level = '3'">
                x
            </xsl:if>
        </td>
        <td class="item-qty-4 x1 light">
            <xsl:if test="$level = '4'">
                x
            </xsl:if>
        </td>
        <td class="item-qty-5 x1 light">
            <xsl:if test="$level = '5'">
                x
            </xsl:if>
        </td>
    </xsl:template>



    <!-- use to format dates -->
    <xsl:template name="format_date">
        <xsl:param name="my_date"/>
        <xsl:if test="$my_date != ''">
            <xsl:value-of select="concat(substring($my_date, 6, 2),'/',substring($my_date, 9, 2),'/',substring($my_date, 1, 4))"/>
        </xsl:if>
    </xsl:template>



    <!-- use to print release date or planned release date -->
    <xsl:template name="release_date">
        <xsl:param name="released"/>
        <xsl:param name="planned"/>

        <xsl:if test="$released != ''">
            <td class="data-rel x3 mid">
                <xsl:value-of select="concat(substring($released, 6, 2),'/',substring($released, 9, 2),'/',substring($released, 1, 4))"/>
            </td>
        </xsl:if>

        <xsl:if test="$released = '' and $planned != ''">
            <td class="data-rel x3 mid planned-date">
                <span class="planned-date">
                    <xsl:value-of select="concat(substring($planned, 6, 2),'/',substring($planned, 9, 2),'/',substring($planned, 1, 4))"/>
                </span>
            </td>
        </xsl:if>

        <xsl:if test="not($released) and $planned != ''">
            <td class="data-rel x3 mid planned-date">
                <span class="planned-date">
                    <xsl:value-of select="concat(substring($planned, 6, 2),'/',substring($planned, 9, 2),'/',substring($planned, 1, 4))"/>
                </span>
            </td>
        </xsl:if>

        <xsl:if test="$released = '' and $planned = ''">
            <td class="data-rel x3 mid planned-date">
            </td>
        </xsl:if>
    </xsl:template>



    <!-- selected Part without children -->
    <xsl:template match="Item[@type='Document Child Document' or @type='Part Document']">

        <!-- if Part has no children, display only the qty, number, and name -->
        <tr class="data-row">

            <xsl:call-template name="hierarchy">
                <xsl:with-param name="level" select="./related_id/Item/hierarchy" />
            </xsl:call-template>

            <td class="item-num x3 light">
            </td> 
            <td class="item-name x7 light">
                <xsl:value-of select="./related_id/Item/name" />
            </td>
            <td class="data-type x2 mid">
                <xsl:value-of select="./related_id/Item/classification" />
            </td>
            <td class="data-num x6 mid">
                <xsl:value-of select="./related_id/Item/item_number" />
            </td>
            <td class="data-rev x1 mid">
                <xsl:value-of select="./related_id/Item/major_rev" />
            </td>
            <xsl:call-template name="release_date">
                <xsl:with-param name="released" select="./related_id/Item/release_date" />
                <xsl:with-param name="planned" select="./related_id/Item/release_date_plan" />
            </xsl:call-template>
            <td class="data-eff x3 mid">
                <xsl:if test="not(./a_d='A')">
                    <xsl:call-template name="format_date">
                        <xsl:with-param name="my_date" select="./related_id/Item/effective_date" />
                    </xsl:call-template>
                </xsl:if>
            </td>
            <td class="data-cn x4 mid">
                <xsl:if test="not(./a_d='A')">
                    <xsl:value-of select="./related_id/Item/cn/Item/keyed_name" />
                </xsl:if>
            </td>
            <td class="plan-ad x1 light">
                <xsl:value-of select="./a_d" />
            </td>
            <td class="plan-eff x3 light">
                <xsl:call-template name="format_date">
                    <xsl:with-param name="my_date" select="./planned_effective_date" />
                </xsl:call-template>
            </td>
            <td class="plan-cn x4 light">
                <xsl:value-of select="./planned_cn" />
            </td>
        </tr>

        <xsl:if test="not(./a_d='D')">
            <xsl:apply-templates select="./related_id/Item/Relationships/Item[@type='Document Child Document']" />
        </xsl:if>

    </xsl:template>

</xsl:stylesheet>]]></xsl_stylesheet>
  <name>CM2 Baseline (Enterprise)</name>
 </Item>
</AML>